<<<<<<< HEAD
import armas.*
test "testX" {

	assert.that(true)

=======
import wollok.game.*
import niveles.*
import enemigos.*
import decorado.*
import personaje.*
import armas.*
import direcciones.*

describe "niveles" {
	
	method initialize(){
		game.width(15)
		game.height(12)
		game.cellSize(50)
		nivel1.iniciar()
	}

	test "pasar de nivel" {	
		puerta.serAgarrado()
		assert.equals(nivel1, puerta.nivelActual())
		fabricaDeEnemigos.enemigosCreados().forEach({ enemigo => enemigo.morir()})
		puerta.serAgarrado()
		assert.equals(nivel2, puerta.nivelActual())
	}	
	
	test "nivel1" {
		assert.that(game.hasVisual(fondo))
		assert.that(game.hasVisual(puerta))
		assert.that(game.hasVisual(personaje))
		assert.that(game.hasVisual(rama))
		assert.that(game.hasVisual(arco))
		assert.equals("background.jpg", fondo.image())
		assert.equals(5, fabricaDeEnemigos.enemigosCreados().size())
		assert.equals(nivel1, puerta.nivelActual())
	}
	
	test "nivel2" {
		fabricaDeEnemigos.enemigosCreados().forEach({ enemigo => enemigo.morir()})
		nivel1.siguienteNivel()
		
		assert.equals("background3.jpg", fondo.image())
		assert.equals(5, fabricaDeEnemigos.enemigosCreados().size())
		assert.equals(nivel2, puerta.nivelActual())
	}
}


describe "personaje" {
	method initialize(){
		game.width(15)
		game.height(12)
		game.cellSize(50)
		game.addVisualIn(personaje , personaje.position())
	}
	
	test "movimiento" {
		assert.equals("pj-derecha.png", personaje.image());

		personaje.mover(arriba);
		assert.equals("pj-arriba.png", personaje.image());

		personaje.mover(izquierda);
		assert.equals("pj-izquierda.png", personaje.image());

		personaje.mover(abajo);
		assert.equals("pj-abajo.png", personaje.image());

		personaje.mover(derecha);
		assert.equals("pj-derecha.png", personaje.image());
	}

	test "recibir danio" {		
		assert.equals(12, personaje.vida())

		personaje.restarVida(6)
		assert.equals(6, personaje.vida())
		
		personaje.restarVida(6)
		assert.equals(0, personaje.vida())
	}
}

describe "enemigos" {
    const enemigo = new Enemigo(vida = 3,danio=1, nombre= "bichoAzul", position = game.at(3,6) )

	method initialize(){
		game.width(15)
		game.height(12)
		game.cellSize(50)
		game.addVisualIn(enemigo, enemigo.position())
	}
	
	test "movimiento" {
		assert.equals("bichoAzul-derecha.png", enemigo.image());

		enemigo.mover(arriba);
		assert.equals("bichoAzul-arriba.png", enemigo.image());

		enemigo.mover(izquierda);
		assert.equals("bichoAzul-izquierda.png", enemigo.image());

		enemigo.mover(abajo);
		assert.equals("bichoAzul-abajo.png", enemigo.image());
	}
	
	test "recibir danio" {		
		enemigo.activarExploracion()
		
		assert.equals(3, enemigo.vida())
		enemigo.restarVida(1)
		assert.equals(2, enemigo.vida())
		enemigo.restarVida(2)
		assert.equals(0, enemigo.vida())
	}
>>>>>>> branch 'master' of git@github.com:obj1unq/2021s2---tp-juego-grupo-3-1.git
}